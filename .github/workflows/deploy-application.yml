name: Simple Deployment Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-application.yml'

env:
  NODE_VERSION: '18'
  INSTANCE_IP: '44.194.207.22'

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      # Step 1: Check compile errors
      - name: 1Ô∏è‚É£ Check Compile Errors
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: TypeScript compile check
        run: |
          echo "üîç Checking for TypeScript compile errors..."
          npm run typecheck
          echo "‚úÖ No compile errors found"

      # Step 2: Check linting issues
      - name: 2Ô∏è‚É£ Check Linting Issues
        run: |
          echo "üîç Checking for linting issues..."
          npm run lint
          echo "‚úÖ No linting issues found"

      # Step 3: Build
      - name: 3Ô∏è‚É£ Build Application
        run: |
          echo "üèóÔ∏è Building application..."
          npm run build
          echo "‚úÖ Build completed successfully"

      # Step 4: Deploy to existing infrastructure
      - name: 4Ô∏è‚É£ Deploy to Production Server
        run: |
          echo "üöÄ Deploying to production server at ${{ env.INSTANCE_IP }}..."
          
          # Setup SSH key
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ env.INSTANCE_IP }} >> ~/.ssh/known_hosts
          
          # Deploy via SSH
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ec2-user@${{ env.INSTANCE_IP }} << 'DEPLOY_SCRIPT'
          set -e
          
          echo "üì¶ Updating application on server..."
          
          # Navigate to app directory
          cd /opt/book-review-api/current/backend || {
            echo "App directory not found, setting up fresh deployment..."
            sudo mkdir -p /opt/book-review-api
            cd /opt/book-review-api
            sudo git clone https://github.com/${{ github.repository }}.git current
            cd current/backend
          }
          
          # Update code
          echo "üì• Pulling latest code..."
          sudo git fetch origin
          sudo git reset --hard origin/main
          
          # Install and build
          echo "üèóÔ∏è Installing dependencies and building..."
          sudo npm ci --only=production
          sudo npm run build
          
          # Restart application
          echo "üîÑ Restarting application..."
          sudo pkill -f "node.*app.js" 2>/dev/null || true
          sleep 2
          cd dist
          sudo nohup node app.js > /var/log/book-review-api.log 2>&1 &
          
          echo "‚úÖ Deployment completed successfully"
          DEPLOY_SCRIPT

      - name: Verify Deployment
        run: |
          echo "üîç Verifying deployment..."
          sleep 10
          
          # Basic health check
          if curl -f http://${{ env.INSTANCE_IP }}/health; then
            echo "‚úÖ Health check passed"
          else
            echo "‚ùå Health check failed"
            exit 1
          fi
          
          echo "üéâ Deployment successful! Application is running at http://${{ env.INSTANCE_IP }}"
